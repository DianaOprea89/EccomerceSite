{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from \"@/api/api\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"ProductDetailPage\",\n  data() {\n    return {\n      products: [],\n      product: {\n        name: \"\",\n        id: \"\"\n      },\n      itemsIsInCart: false,\n      showSuccessMessage: false\n    };\n  },\n  computed: {\n    ...mapState([\"user\", \"cart\"]),\n    loggedInUser() {\n      return this.$store.getters.loggedInUser;\n    },\n    isAuthenticated() {\n      return this.$store.getters.isAuthenticated;\n    },\n    existingProduct() {\n      return this.$store.getters.existingProduct;\n    }\n  },\n  methods: {\n    async addToCart(product) {\n      if (!this.user || !this.user.email || !this.user.password) {\n        console.error(\"User is not authenticated. Please log in.\");\n        return;\n      }\n      try {\n        console.log(\"Adding to cart:\", product);\n        console.log(\"Product ID:\", product.id);\n        const response = await api.post('/api/cart/add', {\n          email: this.user.email,\n          password: this.user.password,\n          productId: product.id\n        });\n        console.log(\"API response:\", response); // Log the API response\n\n        if (response.status === 200) {\n          console.log(\"Product added to cart successfully on the server\");\n          this.showSuccessMessage = true;\n          this.itemsIsInCart = true;\n          setTimeout(() => {\n            this.showSuccessMessage = false;\n          }, 3000);\n        } else {\n          console.error(\"Failed to add to cart on the server\");\n        }\n      } catch (error) {\n        console.error(\"Failed to add to cart:\", error);\n        this.showSuccessMessage = false;\n        this.itemsIsInCart = false;\n      }\n    },\n    async fetchData() {\n      try {\n        const productId = Number(this.$route.params.id);\n        console.log(\"Product ID from route:\", productId);\n        const productResult = await api.get(`/api/products/${productId}`);\n        this.product = productResult.data;\n\n        // Log the retrieved product data\n        console.log(\"Product data:\", this.product);\n        if (this.product.id === undefined) {\n          console.error(\"Product ID is undefined in the fetched data.\");\n          return;\n        }\n        if (this.user && this.user.cartItems) {\n          this.itemsIsInCart = this.user.cartItems.includes(this.product.id);\n          console.log(\"Is in cart:\", this.itemsIsInCart);\n        }\n      } catch (error) {\n        console.error(\"An error occurred while fetching data:\", error);\n      }\n    }\n  },\n  async created() {\n    try {\n      const result = await api.get(`/api/products/123`);\n      console.log(\"Result:\", result);\n      const products = result.data;\n      this.products = products;\n    } catch (error) {\n      console.error('An error occurred while fetching data:', error);\n    }\n    console.log(\"ProductDetailPage created hook\");\n    this.$watch(\"user\", newValue => {\n      if (newValue) {\n        // The watcher is triggered when 'user' changes\n        console.log(\"User data in Vuex store:\", this.user);\n        this.fetchData();\n      } else {\n        // If 'user' is null (not authenticated), redirect to the login page\n        console.log(\"User not authenticated. Redirecting to login.\");\n        this.$router.push(\"/login\");\n      }\n    });\n  }\n};","map":{"version":3,"names":["api","mapState","name","data","products","product","id","itemsIsInCart","showSuccessMessage","computed","loggedInUser","$store","getters","isAuthenticated","existingProduct","methods","addToCart","user","email","password","console","error","log","response","post","productId","status","setTimeout","fetchData","Number","$route","params","productResult","get","undefined","cartItems","includes","created","result","$watch","newValue","$router","push"],"sources":["src/views/ProductDetailPage.vue"],"sourcesContent":["<template>\r\n  <div id=\"page-wrap\">\r\n    <div id=\"img-wrap\">\r\n<!--    <img :src=\"require(`../assets/${product.imageUrl}`).default\">-->\r\n    </div>\r\n    <div id=\"product-details\">\r\n      <h1>{{ product.name }}</h1>\r\n      <h3 id=\"price\">$ {{ product.price }}</h3>\r\n      <p>Average rating: {{ product.averageRating }}</p>\r\n      <button\r\n          class=\"add-to-cart\"\r\n          v-if=\"!itemsIsInCart && !showSuccessMessage\"\r\n          @click=\"addToCart(product)\"\r\n      >Add to Cart</button>\r\n\r\n      <button\r\n          class=\"green-button add-to-cart\"\r\n          v-if=\"!itemsIsInCart && showSuccessMessage\"\r\n      >Successfully added item to cart!</button>\r\n\r\n      <button\r\n          class=\"grey-button add-to-cart\"\r\n          v-if=\"itemsIsInCart\"\r\n      >Item is already in cart!</button>\r\n\r\n      <h4>Description</h4>\r\n      <p>{{ product.description }}</p>\r\n    </div>\r\n<!--    <div :products=\"products\">-->\r\n<!-- {{products}}-->\r\n<!--    </div>-->\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n\r\n<script>\r\n\r\nimport api from \"@/api/api\";\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"ProductDetailPage\",\r\n  data() {\r\n    return {\r\n      products: [],\r\n      product: {\r\n        name: \"\",\r\n        id: \"\"\r\n      },\r\n      itemsIsInCart: false,\r\n      showSuccessMessage: false,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState([\"user\", \"cart\"]),\r\n    loggedInUser() {\r\n      return this.$store.getters.loggedInUser;\r\n    },\r\n    isAuthenticated() {\r\n      return this.$store.getters.isAuthenticated;\r\n    },\r\n    existingProduct(){\r\n      return this.$store.getters.existingProduct;\r\n    }\r\n  },\r\n  methods: {\r\n    async addToCart(product) {\r\n\r\n      if (!this.user || !this.user.email || !this.user.password) {\r\n        console.error(\"User is not authenticated. Please log in.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        console.log(\"Adding to cart:\", product);\r\n        console.log(\"Product ID:\", product.id);\r\n\r\n        const response = await api.post('/api/cart/add', {\r\n          email: this.user.email,\r\n          password: this.user.password,\r\n          productId: product.id\r\n        });\r\n\r\n        console.log(\"API response:\", response); // Log the API response\r\n\r\n        if (response.status === 200) {\r\n          console.log(\"Product added to cart successfully on the server\");\r\n\r\n          this.showSuccessMessage = true;\r\n          this.itemsIsInCart = true;\r\n\r\n          setTimeout(() => {\r\n            this.showSuccessMessage = false;\r\n          }, 3000);\r\n        } else {\r\n          console.error(\"Failed to add to cart on the server\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to add to cart:\", error);\r\n        this.showSuccessMessage = false;\r\n        this.itemsIsInCart = false;\r\n      }\r\n    },\r\n    async fetchData() {\r\n      try {\r\n        const productId = Number(this.$route.params.id);\r\n        console.log(\"Product ID from route:\", productId);\r\n\r\n        const productResult = await api.get(`/api/products/${productId}`);\r\n        this.product = productResult.data;\r\n\r\n        // Log the retrieved product data\r\n        console.log(\"Product data:\", this.product);\r\n\r\n        if (this.product.id === undefined) {\r\n          console.error(\"Product ID is undefined in the fetched data.\");\r\n          return;\r\n        }\r\n\r\n        if (this.user && this.user.cartItems) {\r\n          this.itemsIsInCart = this.user.cartItems.includes(this.product.id);\r\n          console.log(\"Is in cart:\", this.itemsIsInCart);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"An error occurred while fetching data:\", error);\r\n      }\r\n    }\r\n\r\n  },\r\n  async created() {\r\n    try {\r\n\r\n      const result = await api.get(`/api/products/123`);\r\n      console.log(\"Result:\", result);\r\n      const products = result.data;\r\n      this.products = products;\r\n    } catch (error) {\r\n      console.error('An error occurred while fetching data:', error);\r\n    }\r\n\r\n    console.log(\"ProductDetailPage created hook\");\r\n    this.$watch(\"user\", (newValue) => {\r\n      if (newValue) {\r\n        // The watcher is triggered when 'user' changes\r\n        console.log(\"User data in Vuex store:\", this.user);\r\n        this.fetchData();\r\n      } else {\r\n        // If 'user' is null (not authenticated), redirect to the login page\r\n        console.log(\"User not authenticated. Redirecting to login.\");\r\n        this.$router.push(\"/login\");\r\n      }\r\n    });\r\n    }\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#page-wrap {\r\n  margin-top: 16px;\r\n  padding: 16px;\r\n  max-width: 600px;\r\n}\r\n\r\n#img-wrap {\r\n  text-align: center;\r\n}\r\n\r\nimg {\r\n  width: 400px;\r\n}\r\n\r\n#product-details {\r\n  padding: 16px;\r\n  position: relative;\r\n}\r\n\r\n.add-to-cart {\r\n  width: 100%;\r\n}\r\n\r\n#price {\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 16px;\r\n}\r\n.green-button{\r\nbackground-color: green\r\n}\r\n.grey-button{\r\n  background-color: gray;\r\n}\r\n</style>\r\n"],"mappings":";AAuCA,OAAAA,GAAA;AACA,SAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,OAAA;QACAH,IAAA;QACAI,EAAA;MACA;MACAC,aAAA;MACAC,kBAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAR,QAAA;IACAS,aAAA;MACA,YAAAC,MAAA,CAAAC,OAAA,CAAAF,YAAA;IACA;IACAG,gBAAA;MACA,YAAAF,MAAA,CAAAC,OAAA,CAAAC,eAAA;IACA;IACAC,gBAAA;MACA,YAAAH,MAAA,CAAAC,OAAA,CAAAE,eAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,UAAAX,OAAA;MAEA,UAAAY,IAAA,UAAAA,IAAA,CAAAC,KAAA,UAAAD,IAAA,CAAAE,QAAA;QACAC,OAAA,CAAAC,KAAA;QACA;MACA;MAEA;QACAD,OAAA,CAAAE,GAAA,oBAAAjB,OAAA;QACAe,OAAA,CAAAE,GAAA,gBAAAjB,OAAA,CAAAC,EAAA;QAEA,MAAAiB,QAAA,SAAAvB,GAAA,CAAAwB,IAAA;UACAN,KAAA,OAAAD,IAAA,CAAAC,KAAA;UACAC,QAAA,OAAAF,IAAA,CAAAE,QAAA;UACAM,SAAA,EAAApB,OAAA,CAAAC;QACA;QAEAc,OAAA,CAAAE,GAAA,kBAAAC,QAAA;;QAEA,IAAAA,QAAA,CAAAG,MAAA;UACAN,OAAA,CAAAE,GAAA;UAEA,KAAAd,kBAAA;UACA,KAAAD,aAAA;UAEAoB,UAAA;YACA,KAAAnB,kBAAA;UACA;QACA;UACAY,OAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACAD,OAAA,CAAAC,KAAA,2BAAAA,KAAA;QACA,KAAAb,kBAAA;QACA,KAAAD,aAAA;MACA;IACA;IACA,MAAAqB,UAAA;MACA;QACA,MAAAH,SAAA,GAAAI,MAAA,MAAAC,MAAA,CAAAC,MAAA,CAAAzB,EAAA;QACAc,OAAA,CAAAE,GAAA,2BAAAG,SAAA;QAEA,MAAAO,aAAA,SAAAhC,GAAA,CAAAiC,GAAA,kBAAAR,SAAA;QACA,KAAApB,OAAA,GAAA2B,aAAA,CAAA7B,IAAA;;QAEA;QACAiB,OAAA,CAAAE,GAAA,uBAAAjB,OAAA;QAEA,SAAAA,OAAA,CAAAC,EAAA,KAAA4B,SAAA;UACAd,OAAA,CAAAC,KAAA;UACA;QACA;QAEA,SAAAJ,IAAA,SAAAA,IAAA,CAAAkB,SAAA;UACA,KAAA5B,aAAA,QAAAU,IAAA,CAAAkB,SAAA,CAAAC,QAAA,MAAA/B,OAAA,CAAAC,EAAA;UACAc,OAAA,CAAAE,GAAA,qBAAAf,aAAA;QACA;MACA,SAAAc,KAAA;QACAD,OAAA,CAAAC,KAAA,2CAAAA,KAAA;MACA;IACA;EAEA;EACA,MAAAgB,QAAA;IACA;MAEA,MAAAC,MAAA,SAAAtC,GAAA,CAAAiC,GAAA;MACAb,OAAA,CAAAE,GAAA,YAAAgB,MAAA;MACA,MAAAlC,QAAA,GAAAkC,MAAA,CAAAnC,IAAA;MACA,KAAAC,QAAA,GAAAA,QAAA;IACA,SAAAiB,KAAA;MACAD,OAAA,CAAAC,KAAA,2CAAAA,KAAA;IACA;IAEAD,OAAA,CAAAE,GAAA;IACA,KAAAiB,MAAA,SAAAC,QAAA;MACA,IAAAA,QAAA;QACA;QACApB,OAAA,CAAAE,GAAA,kCAAAL,IAAA;QACA,KAAAW,SAAA;MACA;QACA;QACAR,OAAA,CAAAE,GAAA;QACA,KAAAmB,OAAA,CAAAC,IAAA;MACA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}