{"ast":null,"code":"import api from \"@/api/api\";\nimport { mapState } from \"vuex\"; // Import mapState from Vuex for state mapping\n\nexport default {\n  components: {},\n  computed: {\n    ...mapState([\"email\", \"password\", \"cart\"])\n  },\n  data() {\n    return {\n      product: {\n        name: ''\n      },\n      itemsIsInCart: false,\n      showSuccessMessage: false\n    };\n  },\n  methods: {\n    async addToCart() {\n      try {\n        this.$store.dispatch(\"addToCart\", product);\n\n        // Simulate success for demonstration\n        this.showSuccessMessage = true;\n        this.itemsIsInCart = true;\n        setTimeout(() => {\n          this.showSuccessMessage = false;\n        }, 3000);\n      } catch (error) {\n        console.error(\"Failed to add to cart:\", error);\n        this.showSuccessMessage = false;\n        this.itemsIsInCart = false;\n      }\n    }\n  },\n  async created() {\n    try {\n      const productId = this.$route.params.id;\n      const productResult = await api.get(`/api/products/${productId}`);\n      this.product = productResult.data;\n      console.log(\"Product imageUrl:\", this.product.imageUrl);\n      console.log(\"Product data:\", this.product); // Add this line for debugging\n\n      // Example: Check if the product is already in the cart\n      if (this.cart && this.product) {\n        this.itemsIsInCart = this.cart.some(item => item.id === this.product.id);\n      } else {\n        // Handle the case where either this.cart or this.product is undefined.\n      }\n    } catch (error) {\n      console.error(\"An error occurred while fetching data:\", error);\n    }\n  }\n};","map":{"version":3,"names":["api","mapState","components","computed","data","product","name","itemsIsInCart","showSuccessMessage","methods","addToCart","$store","dispatch","setTimeout","error","console","created","productId","$route","params","id","productResult","get","log","imageUrl","cart","some","item"],"sources":["src/views/ProductDetailPage.vue"],"sourcesContent":["<template>\r\n  <div id=\"page-wrap\">\r\n    <div id=\"img-wrap\">\r\n<!-- <img :src=\"require(`../assets/${product.imageUrl}`).default\">-->\r\n    </div>\r\n    <div id=\"product-details\">\r\n      <h1>{{ product.name }}</h1>\r\n      <h3 id=\"price\">$ {{ product.price }}</h3>\r\n      <p>Average rating: {{ product.averageRating }}</p>\r\n      <button\r\n          class=\"add-to-cart\"\r\n          v-if=\"!itemsIsInCart && !showSuccessMessage\"\r\n          @click=\"addToCart(product)\"\r\n      >Add to Cart</button>\r\n\r\n      <button\r\n          class=\"green-button add-to-cart\"\r\n          v-if=\"!itemsIsInCart && showSuccessMessage\"\r\n      >Successfully added item to cart!</button>\r\n\r\n      <button\r\n          class=\"grey-button add-to-cart\"\r\n          v-if=\"itemsIsInCart\"\r\n      >Item is already in cart!</button>\r\n\r\n      <h4>Description</h4>\r\n      <p>{{ product.description }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport api from \"@/api/api\";\r\n\r\nimport { mapState } from \"vuex\"; // Import mapState from Vuex for state mapping\r\n\r\nexport default {\r\n  components: {\r\n\r\n  },\r\n  computed: {\r\n    ...mapState([\"email\", \"password\", \"cart\"]),\r\n  },\r\n  data() {\r\n    return {\r\n      product: {\r\n        name:''\r\n      },\r\n      itemsIsInCart: false,\r\n      showSuccessMessage: false,\r\n    };\r\n  },\r\n  methods: {\r\n    async addToCart() {\r\n      try {\r\n         this.$store.dispatch(\"addToCart\", product);\r\n\r\n        // Simulate success for demonstration\r\n        this.showSuccessMessage = true;\r\n        this.itemsIsInCart = true;\r\n\r\n        setTimeout(() => {\r\n          this.showSuccessMessage = false;\r\n        }, 3000);\r\n      } catch (error) {\r\n        console.error(\"Failed to add to cart:\", error);\r\n        this.showSuccessMessage = false;\r\n        this.itemsIsInCart = false;\r\n      }\r\n    },\r\n  },\r\n  async created() {\r\n    try {\r\n      const productId = this.$route.params.id;\r\n      const productResult = await api.get(`/api/products/${productId}`);\r\n      this.product = productResult.data;\r\n      console.log(\"Product imageUrl:\", this.product.imageUrl);\r\n\r\n      console.log(\"Product data:\", this.product); // Add this line for debugging\r\n\r\n      // Example: Check if the product is already in the cart\r\n      if (this.cart && this.product) {\r\n        this.itemsIsInCart = this.cart.some((item) => item.id === this.product.id);\r\n      } else {\r\n        // Handle the case where either this.cart or this.product is undefined.\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"An error occurred while fetching data:\", error);\r\n    }\r\n  }\r\n\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n#page-wrap {\r\n  margin-top: 16px;\r\n  padding: 16px;\r\n  max-width: 600px;\r\n}\r\n\r\n#img-wrap {\r\n  text-align: center;\r\n}\r\n\r\nimg {\r\n  width: 400px;\r\n}\r\n\r\n#product-details {\r\n  padding: 16px;\r\n  position: relative;\r\n}\r\n\r\n.add-to-cart {\r\n  width: 100%;\r\n}\r\n\r\n#price {\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 16px;\r\n}\r\n.green-button{\r\nbackground-color: green\r\n}\r\n.grey-button{\r\n  background-color: gray;\r\n}\r\n</style>\r\n"],"mappings":"AAiCA,OAAAA,GAAA;AAEA,SAAAC,QAAA;;AAEA;EACAC,UAAA,GAEA;EACAC,QAAA;IACA,GAAAF,QAAA;EACA;EACAG,KAAA;IACA;MACAC,OAAA;QACAC,IAAA;MACA;MACAC,aAAA;MACAC,kBAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,UAAA;MACA;QACA,KAAAC,MAAA,CAAAC,QAAA,cAAAP,OAAA;;QAEA;QACA,KAAAG,kBAAA;QACA,KAAAD,aAAA;QAEAM,UAAA;UACA,KAAAL,kBAAA;QACA;MACA,SAAAM,KAAA;QACAC,OAAA,CAAAD,KAAA,2BAAAA,KAAA;QACA,KAAAN,kBAAA;QACA,KAAAD,aAAA;MACA;IACA;EACA;EACA,MAAAS,QAAA;IACA;MACA,MAAAC,SAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;MACA,MAAAC,aAAA,SAAArB,GAAA,CAAAsB,GAAA,kBAAAL,SAAA;MACA,KAAAZ,OAAA,GAAAgB,aAAA,CAAAjB,IAAA;MACAW,OAAA,CAAAQ,GAAA,2BAAAlB,OAAA,CAAAmB,QAAA;MAEAT,OAAA,CAAAQ,GAAA,uBAAAlB,OAAA;;MAEA;MACA,SAAAoB,IAAA,SAAApB,OAAA;QACA,KAAAE,aAAA,QAAAkB,IAAA,CAAAC,IAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAP,EAAA,UAAAf,OAAA,CAAAe,EAAA;MACA;QACA;MAAA;IAGA,SAAAN,KAAA;MACAC,OAAA,CAAAD,KAAA,2CAAAA,KAAA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}