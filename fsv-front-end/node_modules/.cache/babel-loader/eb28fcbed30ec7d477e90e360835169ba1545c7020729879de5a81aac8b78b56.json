{"ast":null,"code":"import api from \"@/api/api\";\nimport NotFoundPage from './NotFoundPage';\nexport default {\n  components: {\n    NotFoundPage\n  },\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      cart: [],\n      products: [],\n      product: null,\n      itemsIsInCart: false,\n      showSuccesMessage: false\n    };\n  },\n  async addToCart(product) {\n    try {\n      const payload = {\n        email: this.email,\n        // Check if these variables are properly defined\n        password: this.password,\n        // Check if these variables are properly defined\n        id: this.id,\n        // Check if these variables are properly defined\n        productId: product.id\n      };\n      console.log(\"Adding product to cart with payload:\", payload);\n\n      // Make the API request to add the product to the cart\n      await api.post('/api/cart/add', payload, {\n        withCredentials: true\n      });\n      console.log(\"Product added to cart successfully\");\n\n      // Update component data\n      this.showSuccesMessage = true;\n      this.itemsIsInCart = true;\n\n      // Hide success message after 3 seconds\n      setTimeout(() => {\n        this.showSuccesMessage = false;\n      }, 3000);\n    } catch (error) {\n      console.error(\"Failed to add to cart:\", error);\n\n      // Handle the error, update component data accordingly\n      this.showSuccesMessage = false;\n      this.itemsIsInCart = false;\n    }\n  }\n};","map":{"version":3,"names":["api","NotFoundPage","components","data","email","password","cart","products","product","itemsIsInCart","showSuccesMessage","addToCart","payload","id","productId","console","log","post","withCredentials","setTimeout","error"],"sources":["src/views/ProductDetailPage.vue"],"sourcesContent":["<template>\r\n  <div id=\"page-wrap\" v-if=\"product\">\r\n    <div id=\"img-wrap\">\r\n      <img :src=\"product.imageUrl\">\r\n    </div>\r\n    <div id=\"product-details\">\r\n      <h1>{{product.name}}</h1>\r\n      <h3 id=\"price\">$ {{product.price}}</h3>\r\n      <p>Average rating :{{product.averageRating}}</p>\r\n      <button\r\n          class=\"add-to-cart\"\r\n          v-if=\"!itemsIsInCart && !showSuccesMessage\"\r\n          v-on:click=\"addToCart(product)\"\r\n      >Add to cart</button>\r\n\r\n      <button\r\n\r\n          class=\"green-button add-to-cart\"\r\n          v-if=\"!itemsIsInCart &&  showSuccesMessage\"\r\n      > Successfully added item to cart!</button>\r\n      <button\r\n\r\n          class=\"grey-button add-to-cart\"\r\n          v-if=\"itemsIsInCart\"\r\n\r\n      >Item is already in cart!</button>\r\n      <h4>Description</h4>\r\n      <p>{{product.description}}</p>\r\n    </div>\r\n  </div>\r\n  <not-found-page v-else></not-found-page>\r\n</template>\r\n\r\n<script>\r\nimport api from \"@/api/api\";\r\nimport NotFoundPage from './NotFoundPage'\r\n\r\nexport default {\r\n  components: {\r\n    NotFoundPage\r\n  },\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      password: \"\",\r\n      cart: [],\r\n      products: [],\r\n      product: null,\r\n      itemsIsInCart: false,\r\n      showSuccesMessage: false,\r\n    };\r\n  },\r\n  async addToCart(product) {\r\n    try {\r\n      const payload = {\r\n        email: this.email,        // Check if these variables are properly defined\r\n        password: this.password,  // Check if these variables are properly defined\r\n        id: this.id,              // Check if these variables are properly defined\r\n        productId: product.id\r\n      };\r\n\r\n      console.log(\"Adding product to cart with payload:\", payload);\r\n\r\n      // Make the API request to add the product to the cart\r\n      await api.post('/api/cart/add', payload, { withCredentials: true });\r\n\r\n      console.log(\"Product added to cart successfully\");\r\n\r\n      // Update component data\r\n      this.showSuccesMessage = true;\r\n      this.itemsIsInCart = true;\r\n\r\n      // Hide success message after 3 seconds\r\n      setTimeout(() => {\r\n        this.showSuccesMessage = false;\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Failed to add to cart:\", error);\r\n\r\n      // Handle the error, update component data accordingly\r\n      this.showSuccesMessage = false;\r\n      this.itemsIsInCart = false;\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n#page-wrap {\r\n  margin-top: 16px;\r\n  padding: 16px;\r\n  max-width: 600px;\r\n}\r\n\r\n#img-wrap {\r\n  text-align: center;\r\n}\r\n\r\nimg {\r\n  width: 400px;\r\n}\r\n\r\n#product-details {\r\n  padding: 16px;\r\n  position: relative;\r\n}\r\n\r\n.add-to-cart {\r\n  width: 100%;\r\n}\r\n\r\n#price {\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 16px;\r\n}\r\n.green-button{\r\nbackground-color: green\r\n}\r\n.grey-button{\r\n  background-color: gray;\r\n}\r\n</style>\r\n"],"mappings":"AAkCA,OAAAA,GAAA;AACA,OAAAC,YAAA;AAEA;EACAC,UAAA;IACAD;EACA;EACAE,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;MACAC,IAAA;MACAC,QAAA;MACAC,OAAA;MACAC,aAAA;MACAC,iBAAA;IACA;EACA;EACA,MAAAC,UAAAH,OAAA;IACA;MACA,MAAAI,OAAA;QACAR,KAAA,OAAAA,KAAA;QAAA;QACAC,QAAA,OAAAA,QAAA;QAAA;QACAQ,EAAA,OAAAA,EAAA;QAAA;QACAC,SAAA,EAAAN,OAAA,CAAAK;MACA;MAEAE,OAAA,CAAAC,GAAA,yCAAAJ,OAAA;;MAEA;MACA,MAAAZ,GAAA,CAAAiB,IAAA,kBAAAL,OAAA;QAAAM,eAAA;MAAA;MAEAH,OAAA,CAAAC,GAAA;;MAEA;MACA,KAAAN,iBAAA;MACA,KAAAD,aAAA;;MAEA;MACAU,UAAA;QACA,KAAAT,iBAAA;MACA;IACA,SAAAU,KAAA;MACAL,OAAA,CAAAK,KAAA,2BAAAA,KAAA;;MAEA;MACA,KAAAV,iBAAA;MACA,KAAAD,aAAA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}