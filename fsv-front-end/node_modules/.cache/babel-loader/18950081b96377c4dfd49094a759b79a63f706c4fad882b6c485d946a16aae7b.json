{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport NotFoundPage from \"@/views/NotFoundPage\";\nexport default {\n  name: \"ProductDetailPage\",\n  components: {\n    NotFoundPage\n  },\n  data() {\n    return {\n      product: {},\n      cartItems: [],\n      showSuccesMessage: false,\n      productIsAdded: false\n    };\n  },\n  computed: {\n    itemsIsInCart() {\n      return this.cartItems.some(item => item.id === this.product.id);\n    }\n  },\n  methods: {\n    async addToCart() {\n      const userId = JSON.parse(localStorage.getItem(\"user\")).id; // Retrieve the user ID\n      try {\n        await axios.post(`/api/users/${userId}/cart`, {\n          productId: this.$route.params.id\n        });\n        this.showSuccesMessage = true;\n        setTimeout(() => {\n          this.$router.push('/products');\n        }, 1500);\n      } catch (error) {\n        console.error('Error adding to cart:', error);\n      }\n    },\n    async created() {\n      const userId = JSON.parse(localStorage.getItem(\"user\")).id; // Retrieve the user ID\n      const {\n        data: products\n      } = await axios.get(`/api/products/${this.$route.params.id}`);\n      this.product = products;\n      const {\n        data: cartItems\n      } = await axios.get(`/api/users/${userId}/cart`);\n      this.cartItems = cartItems;\n    }\n  }\n};","map":{"version":3,"names":["axios","NotFoundPage","name","components","data","product","cartItems","showSuccesMessage","productIsAdded","computed","itemsIsInCart","some","item","id","methods","addToCart","userId","JSON","parse","localStorage","getItem","post","productId","$route","params","setTimeout","$router","push","error","console","created","products","get"],"sources":["src/views/ProductDetailPage.vue"],"sourcesContent":["<template>\r\n  <div id=\"page-wrap\" v-if=\"product\">\r\n    <div id=\"img-wrap\">\r\n      <img :src=\"product.imageUrl\">\r\n    </div>\r\n    <div id=\"product-details\">\r\n      <h1>{{product.name}}</h1>\r\n      <h3 id=\"price\">$ {{product.price}}</h3>\r\n      <p>Average rating :{{product.averageRating}}</p>\r\n      <button\r\n          id=\"add-to-cart\"\r\n          v-if=\"!itemsIsInCart && !showSuccesMessage\"\r\n          v-on:click=\"addToCart\"\r\n      >Add to cart</button>\r\n      <button\r\n          id=\"add-to-cart\"\r\n          class=\"green-button\"\r\n          v-if=\"!itemsIsInCart &&  showSuccesMessage\"\r\n      > Successfully added item to cart!</button>\r\n      <button\r\n          id=\"add-to-cart\"\r\n          class=\"grey-button\"\r\n          v-if=\"itemsIsInCart\"\r\n\r\n      >Item is already in cart!</button>\r\n      <h4>Description</h4>\r\n      <p>{{product.description}}</p>\r\n    </div>\r\n  </div>\r\n  <not-found-page v-else></not-found-page>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\n import NotFoundPage from \"@/views/NotFoundPage\";\r\nexport default {\r\n  name: \"ProductDetailPage\",\r\n  components: {NotFoundPage},\r\n  data () {\r\n    return{\r\n      product: {},\r\n      cartItems:[],\r\n      showSuccesMessage:false,\r\n      productIsAdded:false,\r\n    }\r\n  },\r\n  computed:{\r\n    itemsIsInCart(){\r\n      return this.cartItems.some (item => item.id=== this.product.id)\r\n    }\r\n  },\r\n  methods:{\r\n    async addToCart() {\r\n      const userId = JSON.parse(localStorage.getItem(\"user\")).id; // Retrieve the user ID\r\n      try {\r\n        await axios.post(`/api/users/${userId}/cart`, {\r\n          productId: this.$route.params.id\r\n        });\r\n        this.showSuccesMessage = true;\r\n        setTimeout(() => {\r\n          this.$router.push('/products');\r\n        }, 1500);\r\n      } catch (error) {\r\n        console.error('Error adding to cart:', error);\r\n      }\r\n    },\r\n\r\n\r\n    async created() {\r\n      const userId = JSON.parse(localStorage.getItem(\"user\")).id; // Retrieve the user ID\r\n      const { data: products } = await axios.get(`/api/products/${this.$route.params.id}`);\r\n      this.product = products;\r\n      const { data: cartItems } = await axios.get(`/api/users/${userId}/cart`);\r\n      this.cartItems = cartItems;\r\n    }\r\n\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#page-wrap {\r\n  margin-top: 16px;\r\n  padding: 16px;\r\n  max-width: 600px;\r\n}\r\n\r\n#img-wrap {\r\n  text-align: center;\r\n}\r\n\r\nimg {\r\n  width: 400px;\r\n}\r\n\r\n#product-details {\r\n  padding: 16px;\r\n  position: relative;\r\n}\r\n\r\n#add-to-cart {\r\n  width: 100%;\r\n}\r\n\r\n#price {\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 16px;\r\n}\r\n.green-button{\r\nbackground-color: green\r\n}\r\n.grey-button{\r\n  background-color: gray;\r\n}\r\n</style>\r\n"],"mappings":";AAiCA,OAAAA,KAAA;AAEA,OAAAC,YAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACA;MACAC,OAAA;MACAC,SAAA;MACAC,iBAAA;MACAC,cAAA;IACA;EACA;EACAC,QAAA;IACAC,cAAA;MACA,YAAAJ,SAAA,CAAAK,IAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,EAAA,UAAAR,OAAA,CAAAQ,EAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,UAAA;MACA,MAAAC,MAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA,UAAAP,EAAA;MACA;QACA,MAAAb,KAAA,CAAAqB,IAAA,eAAAL,MAAA;UACAM,SAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAX;QACA;QACA,KAAAN,iBAAA;QACAkB,UAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;QACA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,0BAAAA,KAAA;MACA;IACA;IAGA,MAAAE,QAAA;MACA,MAAAd,MAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA,UAAAP,EAAA;MACA;QAAAT,IAAA,EAAA2B;MAAA,UAAA/B,KAAA,CAAAgC,GAAA,uBAAAT,MAAA,CAAAC,MAAA,CAAAX,EAAA;MACA,KAAAR,OAAA,GAAA0B,QAAA;MACA;QAAA3B,IAAA,EAAAE;MAAA,UAAAN,KAAA,CAAAgC,GAAA,eAAAhB,MAAA;MACA,KAAAV,SAAA,GAAAA,SAAA;IACA;EAIA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}