{"ast":null,"code":"import axios from 'axios';\nimport NotFoundPage from \"@/views/NotFoundPage\";\nexport default {\n  name: \"ProductDetailPage\",\n  components: {\n    NotFoundPage\n  },\n  data() {\n    return {\n      product: {},\n      cartItems: [],\n      showSuccesMessage: false,\n      productIsAdded: false\n    };\n  },\n  computed: {\n    itemsIsInCart() {\n      return this.cartItems.some(item => item.id === this.product.id);\n    }\n  },\n  methods: {\n    async addToCart() {\n      const productId = this.$route.params.id;\n      const token = localStorage.getItem('token');\n      const userId = this.$store.state.user.id; // Make sure this path is correct\n\n      try {\n        await axios.post(`/api/users/${userId}/cart`, {\n          productId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Handle success\n      } catch (error) {\n        // Handle errors\n      }\n    }\n  },\n  async created() {\n    const {\n      data: product\n    } = await axios.get(`/api/products/${this.$route.params.id}`);\n    this.product = product;\n\n    // Get the user ID from the store\n    const userId = this.$store.state.user.id;\n    try {\n      const {\n        data: cartItems\n      } = await axios.get(`/api/users/${userId}/cart`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      this.cartItems = cartItems;\n    } catch (error) {\n      console.error(\"Error fetching cart items:\", error.message);\n    }\n  }\n};","map":{"version":3,"names":["axios","NotFoundPage","name","components","data","product","cartItems","showSuccesMessage","productIsAdded","computed","itemsIsInCart","some","item","id","methods","addToCart","productId","$route","params","token","localStorage","getItem","userId","$store","state","user","post","headers","Authorization","error","created","get","console","message"],"sources":["src/views/ProductDetailPage.vue"],"sourcesContent":["<template>\r\n  <div id=\"page-wrap\" v-if=\"product\">\r\n    <div id=\"img-wrap\">\r\n      <img :src=\"product.imageUrl\">\r\n    </div>\r\n    <div id=\"product-details\">\r\n      <h1>{{product.name}}</h1>\r\n      <h3 id=\"price\">$ {{product.price}}</h3>\r\n      <p>Average rating :{{product.averageRating}}</p>\r\n      <button\r\n          id=\"add-to-cart\"\r\n          v-if=\"!itemsIsInCart && !showSuccesMessage\"\r\n          v-on:click=\"addToCart\"\r\n      >Add to cart</button>\r\n      <button\r\n          id=\"add-to-cart\"\r\n          class=\"green-button\"\r\n          v-if=\"!itemsIsInCart &&  showSuccesMessage\"\r\n      > Successfully added item to cart!</button>\r\n      <button\r\n          id=\"add-to-cart\"\r\n          class=\"grey-button\"\r\n          v-if=\"itemsIsInCart\"\r\n\r\n      >Item is already in cart!</button>\r\n      <h4>Description</h4>\r\n      <p>{{product.description}}</p>\r\n    </div>\r\n  </div>\r\n  <not-found-page v-else></not-found-page>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\n import NotFoundPage from \"@/views/NotFoundPage\";\r\nexport default {\r\n  name: \"ProductDetailPage\",\r\n  components: {NotFoundPage},\r\n  data() {\r\n    return {\r\n      product: {},\r\n      cartItems: [],\r\n      showSuccesMessage: false,\r\n      productIsAdded: false,\r\n    }\r\n  },\r\n  computed: {\r\n    itemsIsInCart() {\r\n      return this.cartItems.some(item => item.id === this.product.id)\r\n    }\r\n  },\r\n  methods: {\r\n    async addToCart() {\r\n      const productId = this.$route.params.id;\r\n      const token = localStorage.getItem('token');\r\n      const userId = this.$store.state.user.id; // Make sure this path is correct\r\n\r\n      try {\r\n        await axios.post(`/api/users/${userId}/cart`, {productId}, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        // Handle success\r\n      } catch (error) {\r\n        // Handle errors\r\n      }\r\n    },\r\n  }\r\n  ,\r\n\r\n  async created() {\r\n    const {data: product} = await axios.get(`/api/products/${this.$route.params.id}`);\r\n    this.product = product;\r\n\r\n    // Get the user ID from the store\r\n    const userId = this.$store.state.user.id;\r\n\r\n    try {\r\n      const {data: cartItems} = await axios.get(`/api/users/${userId}/cart`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n      this.cartItems = cartItems;\r\n    } catch (error) {\r\n      console.error(\"Error fetching cart items:\", error.message);\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n#page-wrap {\r\n  margin-top: 16px;\r\n  padding: 16px;\r\n  max-width: 600px;\r\n}\r\n\r\n#img-wrap {\r\n  text-align: center;\r\n}\r\n\r\nimg {\r\n  width: 400px;\r\n}\r\n\r\n#product-details {\r\n  padding: 16px;\r\n  position: relative;\r\n}\r\n\r\n#add-to-cart {\r\n  width: 100%;\r\n}\r\n\r\n#price {\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 16px;\r\n}\r\n.green-button{\r\nbackground-color: green\r\n}\r\n.grey-button{\r\n  background-color: gray;\r\n}\r\n</style>\r\n"],"mappings":"AAiCA,OAAAA,KAAA;AAEA,OAAAC,YAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACA;MACAC,OAAA;MACAC,SAAA;MACAC,iBAAA;MACAC,cAAA;IACA;EACA;EACAC,QAAA;IACAC,cAAA;MACA,YAAAJ,SAAA,CAAAK,IAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,EAAA,UAAAR,OAAA,CAAAQ,EAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,UAAA;MACA,MAAAC,SAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAL,EAAA;MACA,MAAAM,KAAA,GAAAC,YAAA,CAAAC,OAAA;MACA,MAAAC,MAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAZ,EAAA;;MAEA;QACA,MAAAb,KAAA,CAAA0B,IAAA,eAAAJ,MAAA;UAAAN;QAAA;UACAW,OAAA;YACAC,aAAA,YAAAT,KAAA;UACA;QACA;;QAEA;MACA,SAAAU,KAAA;QACA;MAAA;IAEA;EACA;EAGA,MAAAC,QAAA;IACA;MAAA1B,IAAA,EAAAC;IAAA,UAAAL,KAAA,CAAA+B,GAAA,uBAAAd,MAAA,CAAAC,MAAA,CAAAL,EAAA;IACA,KAAAR,OAAA,GAAAA,OAAA;;IAEA;IACA,MAAAiB,MAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAZ,EAAA;IAEA;MACA;QAAAT,IAAA,EAAAE;MAAA,UAAAN,KAAA,CAAA+B,GAAA,eAAAT,MAAA;QACAK,OAAA;UACAC,aAAA,YAAAR,YAAA,CAAAC,OAAA;QACA;MACA;MACA,KAAAf,SAAA,GAAAA,SAAA;IACA,SAAAuB,KAAA;MACAG,OAAA,CAAAH,KAAA,+BAAAA,KAAA,CAAAI,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}