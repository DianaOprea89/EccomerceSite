{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    user: {\n      email: localStorage.getItem('userEmail') || '',\n      password: localStorage.getItem('userPassword') || '',\n      name: '',\n      id: '',\n      cartItems: []\n    }\n  },\n  mutations: {\n    setUser(state, payload) {\n      state.user.email = payload.email;\n      state.user.password = payload.password;\n      state.user.name = payload.name;\n      state.user.id = payload.id;\n      state.user.cartItems = payload.cartItems || [];\n    },\n    UPDATE_CART(state, payload) {\n      state.user.cartItems = payload;\n    },\n    clearUserData(state) {\n      state.user = null;\n    }\n  },\n  getters: {\n    isAuthenticated: state => {\n      return !!state.user.email; // Using the double NOT (!!) operator to convert truthy/falsy to boolean.\n    },\n\n    getName: state => state.user.name,\n    getUserId: state => state.user.id,\n    userEmail: state => state.user.email,\n    userPassword: state => state.user.password // Not recommended\n  },\n\n  actions: {\n    updateCart({\n      commit\n    }, updatedCartData) {\n      commit('UPDATE_CART', updatedCartData);\n    },\n    async loadUserData({\n      commit\n    }) {\n      try {\n        let userEmail = localStorage.getItem('userEmail');\n        let userPassword = localStorage.getItem('userPassword');\n        const response = await fetch(\"http://localhost:8006/api/userData\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: userEmail,\n            password: userPassword\n          })\n        });\n        if (response.ok) {\n          const fullUserData = await response.json();\n          commit('setUser', fullUserData);\n        } else {\n          throw new Error('Failed to fetch user data');\n        }\n      } catch (error) {\n        console.error('Failed to load user data:', error);\n      }\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","user","email","localStorage","getItem","password","name","id","cartItems","mutations","setUser","payload","UPDATE_CART","clearUserData","getters","isAuthenticated","getName","getUserId","userEmail","userPassword","actions","updateCart","commit","updatedCartData","loadUserData","response","fetch","method","headers","body","JSON","stringify","ok","fullUserData","json","Error","error","console"],"sources":["D:/laragon/www/Node exercises/repos/fsv-front-end/src/store/store.js"],"sourcesContent":["import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\n        state: {\r\n            user: {\r\n                email: localStorage.getItem('userEmail') || '',\r\n                password: localStorage.getItem('userPassword') || '',\r\n                name: '',\r\n                id: '',\r\n                cartItems: []\r\n            }\r\n        },\r\n\r\n    mutations: {\r\n        setUser(state, payload) {\r\n            state.user.email = payload.email;\r\n            state.user.password = payload.password;\r\n            state.user.name = payload.name;\r\n            state.user.id = payload.id;\r\n            state.user.cartItems = payload.cartItems || [];\r\n        },\r\n        UPDATE_CART(state, payload) {\r\n            state.user.cartItems = payload;\r\n        },\r\n        clearUserData(state) {\r\n            state.user = null;\r\n        },\r\n    },\r\n    getters: {\r\n        isAuthenticated: state => {\r\n            return !!state.user.email;  // Using the double NOT (!!) operator to convert truthy/falsy to boolean.\r\n        },\r\n        getName: state => state.user.name,\r\n        getUserId: state => state.user.id,\r\n        userEmail: state => state.user.email,\r\n        userPassword: state => state.user.password  // Not recommended\r\n    },\r\n    actions: {\r\n        updateCart({ commit }, updatedCartData) {\r\n            commit('UPDATE_CART', updatedCartData);\r\n        },\r\n        async loadUserData({ commit }) {\r\n            try {\r\n                let userEmail = localStorage.getItem('userEmail');\r\n                let userPassword = localStorage.getItem('userPassword');\r\n\r\n                const response = await fetch(\"http://localhost:8006/api/userData\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({\r\n                        email: userEmail,\r\n                        password: userPassword,\r\n                    }),\r\n                });\r\n\r\n                if (response.ok) {\r\n                    const fullUserData = await response.json();\r\n                    commit('setUser', fullUserData);\r\n                } else {\r\n                    throw new Error('Failed to fetch user data');\r\n                }\r\n            } catch (error) {\r\n                console.error('Failed to load user data:', error);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}