{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    cart: []\n  },\n  mutations: {\n    SET_USER(state, user) {\n      console.log('Setting user data:', user);\n      state.user = user;\n      localStorage.setItem('user', JSON.stringify(user));\n      console.log('User data set in Vuex store:', user);\n    },\n    LOGOUT(state) {\n      state.user = null;\n      localStorage.removeItem('user');\n    },\n    ADD_TO_CART(state, product) {\n      state.cart.push(product);\n      // You can also update localStorage if you want to persist the cart data\n      // localStorage.setItem('cart', JSON.stringify(state.cart));\n    },\n\n    // Add a mutation to remove a product from the cart\n    REMOVE_FROM_CART(state, productId) {\n      const index = state.cart.findIndex(item => item.id === productId);\n      if (index !== -1) {\n        state.cart.splice(index, 1);\n        // Update localStorage if you want to persist the cart data\n        // localStorage.setItem('cart', JSON.stringify(state.cart));\n      }\n    }\n  },\n\n  getters: {\n    isAuthenticated: state => {\n      const isAuthenticated = !!state.user;\n      console.log('isAuthenticated:', isAuthenticated);\n      return isAuthenticated;\n    },\n    loggedInUser: state => state.user,\n    cartItems: state => state.cart\n  },\n  actions: {\n    // ... Your existing actions ...\n\n    // Create an action to add a product to the cart\n    addToCart({\n      commit\n    }, product) {\n      commit('ADD_TO_CART', product);\n    },\n    // Create an action to remove a product from the cart\n    removeFromCart({\n      commit\n    }, productId) {\n      commit('REMOVE_FROM_CART', productId);\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","user","JSON","parse","localStorage","getItem","cart","mutations","SET_USER","console","log","setItem","stringify","LOGOUT","removeItem","ADD_TO_CART","product","push","REMOVE_FROM_CART","productId","index","findIndex","item","id","splice","getters","isAuthenticated","loggedInUser","cartItems","actions","addToCart","commit","removeFromCart"],"sources":["D:/laragon/www/Node exercises/repos/fsv-front-end/src/store/store.js"],"sourcesContent":["\r\nimport Vue from 'vue';\r\nimport Vuex from 'vuex';\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\n    state: {\r\n        user: JSON.parse(localStorage.getItem('user')) || null,\r\n        cart: [],\r\n    },\r\n    mutations: {\r\n        SET_USER(state, user) {\r\n            console.log('Setting user data:', user);\r\n            state.user = user;\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            console.log('User data set in Vuex store:', user);\r\n\r\n        },\r\n        LOGOUT(state) {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n        },\r\n        ADD_TO_CART(state, product) {\r\n            state.cart.push(product);\r\n            // You can also update localStorage if you want to persist the cart data\r\n            // localStorage.setItem('cart', JSON.stringify(state.cart));\r\n        },\r\n\r\n        // Add a mutation to remove a product from the cart\r\n        REMOVE_FROM_CART(state, productId) {\r\n            const index = state.cart.findIndex(item => item.id === productId);\r\n            if (index !== -1) {\r\n                state.cart.splice(index, 1);\r\n                // Update localStorage if you want to persist the cart data\r\n                // localStorage.setItem('cart', JSON.stringify(state.cart));\r\n            }\r\n        },\r\n    },\r\n    getters: {\r\n        isAuthenticated: state => {\r\n            const isAuthenticated = !!state.user;\r\n            console.log('isAuthenticated:', isAuthenticated);\r\n            return isAuthenticated;\r\n        },\r\n        loggedInUser: state => state.user,\r\n        cartItems: state => state.cart,\r\n    },\r\n    actions: {\r\n        // ... Your existing actions ...\r\n\r\n        // Create an action to add a product to the cart\r\n        addToCart({ commit }, product) {\r\n            commit('ADD_TO_CART', product);\r\n        },\r\n\r\n        // Create an action to remove a product from the cart\r\n        removeFromCart({ commit }, productId) {\r\n            commit('REMOVE_FROM_CART', productId);\r\n        },\r\n    },\r\n});\r\n"],"mappings":";AACA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC1BC,KAAK,EAAE;IACHC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI;IACtDC,IAAI,EAAE;EACV,CAAC;EACDC,SAAS,EAAE;IACPC,QAAQA,CAACR,KAAK,EAAEC,IAAI,EAAE;MAClBQ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAET,IAAI,CAAC;MACvCD,KAAK,CAACC,IAAI,GAAGA,IAAI;MACjBG,YAAY,CAACO,OAAO,CAAC,MAAM,EAAET,IAAI,CAACU,SAAS,CAACX,IAAI,CAAC,CAAC;MAClDQ,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAET,IAAI,CAAC;IAErD,CAAC;IACDY,MAAMA,CAACb,KAAK,EAAE;MACVA,KAAK,CAACC,IAAI,GAAG,IAAI;MACjBG,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IACnC,CAAC;IACDC,WAAWA,CAACf,KAAK,EAAEgB,OAAO,EAAE;MACxBhB,KAAK,CAACM,IAAI,CAACW,IAAI,CAACD,OAAO,CAAC;MACxB;MACA;IACJ,CAAC;;IAED;IACAE,gBAAgBA,CAAClB,KAAK,EAAEmB,SAAS,EAAE;MAC/B,MAAMC,KAAK,GAAGpB,KAAK,CAACM,IAAI,CAACe,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,SAAS,CAAC;MACjE,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;QACdpB,KAAK,CAACM,IAAI,CAACkB,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;QAC3B;QACA;MACJ;IACJ;EACJ,CAAC;;EACDK,OAAO,EAAE;IACLC,eAAe,EAAE1B,KAAK,IAAI;MACtB,MAAM0B,eAAe,GAAG,CAAC,CAAC1B,KAAK,CAACC,IAAI;MACpCQ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEgB,eAAe,CAAC;MAChD,OAAOA,eAAe;IAC1B,CAAC;IACDC,YAAY,EAAE3B,KAAK,IAAIA,KAAK,CAACC,IAAI;IACjC2B,SAAS,EAAE5B,KAAK,IAAIA,KAAK,CAACM;EAC9B,CAAC;EACDuB,OAAO,EAAE;IACL;;IAEA;IACAC,SAASA,CAAC;MAAEC;IAAO,CAAC,EAAEf,OAAO,EAAE;MAC3Be,MAAM,CAAC,aAAa,EAAEf,OAAO,CAAC;IAClC,CAAC;IAED;IACAgB,cAAcA,CAAC;MAAED;IAAO,CAAC,EAAEZ,SAAS,EAAE;MAClCY,MAAM,CAAC,kBAAkB,EAAEZ,SAAS,CAAC;IACzC;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}